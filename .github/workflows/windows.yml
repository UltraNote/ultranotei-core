name: Windows

on:
  workflow_dispatch:
  push:
    tags:
      - "*"

jobs:
  build-windows:
    name: Windows
    runs-on: windows-2019
    env:
      BOOST_ROOT: C:/local/boost_1_82_0
    steps:
      - uses: actions/checkout@master

      - name: Setup msbuild
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: ${{ env.BOOST_ROOT }}
          key: ${{ runner.os }}-deps-${{ hashFiles('CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Install Boost
        if: steps.cache-deps.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          echo "${env:BOOST_ROOT}"
          $Url = "https://sourceforge.net/projects/boost/files/boost-binaries/1.82.0/boost_1_82_0-msvc-14.3-64.exe"
          (New-Object System.Net.WebClient).DownloadFile($Url, "$env:TEMP\boost.exe")
          Start-Process -Wait -FilePath "$env:TEMP\boost.exe" "/SILENT","/SP-","/SUPPRESSMSGBOXES","/DIR=${env:BOOST_ROOT}"
          
      - name: Build project
        shell: powershell
        id: build-project
        run: |
          $build_folder = "build"
          $xuni_ver = "${{ github.ref }}" -replace 'refs/tags/'
          $release_name = "xuni-cli-win64-v$xuni_ver"
          mkdir "$build_folder"
          cd "$build_folder"
          cmake -G "Visual Studio 17 2022" -A x64 ..
          msbuild ultranoteI.sln /p:Configuration=Release /m
          
      - name: Run tests
        shell: powershell
        run: |
          cd "$build_folder"
          ctest --output-on-failure
          cd src\Release
          Compress-Archive -Path *.exe -DestinationPath "$release_name.zip"
          $sha256 = (Get-FileHash "$release_name.zip").Hash
          $asset_path = "./$build_folder/src/Release/$release_name.zip"
          echo "::set-output name=sha256::${sha256}"
          echo "::set-output name=release_name::${release_name}.zip"
          echo "::set-output name=asset_path::${asset_path}"
          echo "::set-output name=xuni_ver::${xuni_ver}"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.build.outputs.asset_path }}
          name: Conceal Core CLI v${{ steps.build.outputs.xuni_ver }}
          body: |
            **${{ steps.build.outputs.release_name }}**
            ${{ steps.build.outputs.sha256 }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
