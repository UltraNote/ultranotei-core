name: UltraNote Infinity Core CI/CD

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

env:
  BUILD_TYPE: Release
  BOOST_ROOT: C:/local/boost_1_72_0
  OPENSSL_ROOT: C:/Program Files/OpenSSL-Win64

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Cache Boost
      uses: actions/cache@v3
      with:
        path: ${{env.BOOST_ROOT}}
        key: ${{runner.os}}-boost-1.72.0
        
    - name: Install Boost
      if: steps.cache-boost.outputs.cache-hit != 'true'
      run: |
        $Url = "https://boostorg.jfrog.io/artifactory/main/release/1.72.0/source/boost_1_72_0.zip"
        $ProgressPreference = 'SilentlyContinue'
        Invoke-WebRequest -Uri $Url -OutFile boost.zip
        Expand-Archive boost.zip -DestinationPath C:/local/
        cd C:/local/boost_1_72_0
        ./bootstrap.bat
        ./b2 address-model=64 architecture=x86 --with-system --with-filesystem --with-thread --with-date_time --with-chrono --with-regex --with-serialization --with-program_options --with-atomic link=static runtime-link=static threading=multi

    - name: Install OpenSSL
      run: |
        choco install openssl --version=1.1.1.2100 -y
        echo "OPENSSL_ROOT_DIR=C:/Program Files/OpenSSL-Win64" >> $GITHUB_ENV

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake -G "Visual Studio 17 2022" -A x64 -DBOOST_ROOT=${{env.BOOST_ROOT}} -DBoost_USE_STATIC_RUNTIME=ON -DBoost_USE_STATIC_LIBS=ON ..

    - name: Build
      run: |
        cd build
        cmake --build . --config ${{env.BUILD_TYPE}} --parallel 4

    - name: Run Tests
      run: |
        cd build
        ctest -C ${{env.BUILD_TYPE}} --output-on-failure

    - name: Create Release Package
      if: github.ref == 'refs/heads/master'
      run: |
        mkdir release
        copy build/src/Release/UltraNoted.exe release/
        copy build/src/Release/miner.exe release/
        copy build/src/Release/simplewallet.exe release/
        7z a UltraNote-windows-x64.zip ./release/*

    - name: Upload Artifacts
      if: github.ref == 'refs/heads/master'
      uses: actions/upload-artifact@v3
      with:
        name: UltraNote-windows-x64
        path: UltraNote-windows-x64.zip

  build-ubuntu:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          libssl-dev \
          libboost-all-dev \
          git \
          cmake \
          libreadline-dev

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} ..

    - name: Build
      run: |
        cd build
        cmake --build . --config ${{env.BUILD_TYPE}} --parallel $(nproc)

    - name: Run Tests
      run: |
        cd build
        ctest -C ${{env.BUILD_TYPE}} --output-on-failure

    - name: Create Release Package
      if: github.ref == 'refs/heads/master'
      run: |
        mkdir release
        cp build/src/UltraNoted release/
        cp build/src/miner release/
        cp build/src/simplewallet release/
        tar -czf UltraNote-ubuntu-x64.tar.gz -C release .

    - name: Upload Artifacts
      if: github.ref == 'refs/heads/master'
      uses: actions/upload-artifact@v3
      with:
        name: UltraNote-ubuntu-x64
        path: UltraNote-ubuntu-x64.tar.gz

  build-macos:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Install Dependencies
      run: |
        brew install boost@1.72 openssl readline cmake

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
              -DOPENSSL_ROOT_DIR=$(brew --prefix openssl) \
              -DBOOST_ROOT=$(brew --prefix boost@1.72) ..

    - name: Build
      run: |
        cd build
        cmake --build . --config ${{env.BUILD_TYPE}} --parallel $(sysctl -n hw.ncpu)

    - name: Run Tests
      run: |
        cd build
        ctest -C ${{env.BUILD_TYPE}} --output-on-failure

    - name: Create Release Package
      if: github.ref == 'refs/heads/master'
      run: |
        mkdir release
        cp build/src/UltraNoted release/
        cp build/src/miner release/
        cp build/src/simplewallet release/
        tar -czf UltraNote-macos-x64.tar.gz -C release .

    - name: Upload Artifacts
      if: github.ref == 'refs/heads/master'
      uses: actions/upload-artifact@v3
      with:
        name: UltraNote-macos-x64
        path: UltraNote-macos-x64.tar.gz
